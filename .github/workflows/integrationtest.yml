name: Check

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: devtest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "no"
          MYSQL_ROOT_PASSWORD: ${{ secrets.DATA_PASSWORD }}   
          MYSQL_DATABASE: ${{ secrets.DATA_DATABASE }}           
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install
    - name: Install MySQL Server
      run: |
        sudo apt-get update
        sudo apt-get install mysql-server mysql-client -y
    - name: Start MySQL Service
      run: |
        sudo systemctl start mysql
    - name: Start MySQL Service
      run: |
        sudo systemctl start mysql
        sudo systemctl status mysql
    # Create MySQL User `aayush` and grant permissions
    - name: Setup MySQL User and Database
      run: |
        sudo apt-get install mysql-client -y
        until mysqladmin ping -h 127.0.0.1 --silent; do
          echo "Waiting for MySQL..."
          sleep 5
        done
        # Create aayush user and grant privileges
        mysql -h localhost -u root --password=${{ secrets.DATA_PASSWORD }} -e "CREATE USER IF NOT EXISTS 'aayush'@'%' IDENTIFIED BY '${{ secrets.DATA_PASSWORD }}';"
        mysql -h localhost -u root --password=${{ secrets.DATA_PASSWORD }} -e "GRANT ALL PRIVILEGES ON *.* TO 'aayush'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"
        mysql -h localhost -u root --password=${{ secrets.DATA_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DATA_DATABASE }};"

    - name: Print environment variables for debugging
      run: |
        echo "DATA_HOST: ${{ secrets.DATA_HOST }}"  
        echo "DATA_USER: aayush"
        echo "DATA_PASSWORD is set: ${{ secrets.DATA_PASSWORD != '' }}"
        echo "DATA_DATABASE: ${{ secrets.DATA_DATABASE }}"
        echo "DATA_PORT: ${{ secrets.DATA_PORT }}" 

    - name: Wait for MySQL to be ready
      run: |
        until mysql -h ${{ secrets.DATA_HOST }} -u aayush --password=${{ secrets.DATA_PASSWORD }} -e "SHOW DATABASES"; do
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Run Jest tests
      run: npm test
      env:
        DATA_DIALECT: ${{ secrets.DATA_DIALECT }}
        DATA_HOST: ${{ secrets.DATA_HOST }}
        DATA_USER: aayush
        DATA_PASSWORD: ${{ secrets.DATA_PASSWORD }}
        DATA_DATABASE: ${{ secrets.DATA_DATABASE }}
        DATA_PORT: ${{ secrets.DATA_PORT }}

    - name: Check MySQL logs if failed
      if: failure()
      run: docker logs $(docker ps -q --filter ancestor=mysql:8.0)

      #