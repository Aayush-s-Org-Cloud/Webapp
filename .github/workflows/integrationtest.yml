name: Check

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: devtest

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    
    - name: Install MySQL Server
      run: |
        sudo apt-get update
        sudo apt-get install mysql-server -y
        sudo systemctl start mysql
        sudo mysql -e "ALTER USER 'aayush'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY '${{ secrets.DATA_PASSWORD }}';"

     
    - name: Setup MySQL Database and User
      run: |
        sudo mysql -u ${{ secrets.DATA_USER }} --password=${{ secrets.DATA_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DATA_DATABASE }};"
        sudo mysql -u ${{ secrets.DATA_USER }} --password=${{ secrets.DATA_PASSWORD }} -e "GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.DATA_USER }}'@'localhost'; FLUSH PRIVILEGES;"

    - name: Print environment variables for debugging
      run: |
        echo "DATA_HOST: ${{ secrets.DATA_HOST }}"  
        echo "DATA_USER: ${{ secrets.DATA_USER }}"
        echo "DATA_PASSWORD is set: ${{ secrets.DATA_PASSWORD != '' }}"
        echo "DATA_DATABASE: ${{ secrets.DATA_DATABASE }}"
        echo "DATA_PORT: ${{ secrets.DATA_PORT }}" 

    
    - name: Wait for MySQL to be ready
      run: |
        until mysql -h ${{ secrets.DATA_HOST }} -u ${{ secrets.DATA_USER }} --password=${{ secrets.DATA_PASSWORD }} -e "SHOW DATABASES"; do
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Run Jest tests
      run: npm test
      env:
        DATA_DIALECT: mysql
        DATA_HOST: ${{ secrets.DATA_HOST }}
        DATA_USER: ${{ secrets.DATA_USER }}
        DATA_PASSWORD: ${{ secrets.DATA_PASSWORD }}
        DATA_DATABASE: ${{ secrets.DATA_DATABASE }}
        DATA_PORT: ${{ secrets.DATA_PORT }}

    - name: Check MySQL logs if failed
      if: failure()
      run: sudo cat /var/log/mysql/error.log

      #